# 문제
# 병든 나이트가 N × M 크기 체스판의 가장 왼쪽아래 칸에 위치해 있다. 병든 나이트는 건강한 보통 체스의 나이트와 다르게 4가지로만 움직일 수 있다.
# 2칸 위로, 1칸 오른쪽
# 1칸 위로, 2칸 오른쪽
# 1칸 아래로, 2칸 오른쪽
# 2칸 아래로, 1칸 오른쪽
# 병든 나이트는 여행을 시작하려고 하고, 여행을 하면서 방문한 칸의 수를 최대로 하려고 한다. 병든 나이트의 이동 횟수가 4번보다 적지 않다면, 이동 방법을 모두 한 번씩 사용해야 한다. 이동 횟수가 4번보다 적은 경우(방문한 칸이 5개 미만)에는 이동 방법에 대한 제약이 없다.
# 체스판의 크기가 주어졌을 때, 병든 나이트가 여행에서 방문할 수 있는 칸의 최대 개수를 구해보자.

# 입력
# 첫째 줄에 체스판의 세로 길이 N와 가로 길이 M이 주어진다. N과 M은 2,000,000,000보다 작거나 같은 자연수이다.

# 출력
# 병든 나이트가 여행에서 방문할 수 있는 칸의 개수중 최댓값을 출력한다.

# 해결방안
# 세로 길이가 3 이상인 경우 위 아래로 와리가리 무빙을 하며 오른쪽으로 1만큼만 움직이기 가능하다. 하지만 방문한 칸의 개수가 5 이상인 경우에는 골고루 써야하므로 2무빙 2번이 꼭 들어가야 한다.
# 즉 m의 값에서 -4를 했을 때 3이상인 경우에는 m-2로 일반화가 가능하다
# 세로 길이가 2인 경우에는 위 아래 와리가리가 가능하긴 하지만, 무조건 2가지 방법의 움직임 만이 강제되므로 최대 3번의 움직임, 즉 4칸 방문이 가능하다.
# 세로 길이가 1인 경우 위 아래 와리가리 무빙이 불가능하므로 걍 1칸임
# 가로 길이가 1인 경우 마찬가지로 걍 1칸
# 근데 이게 그리디가 맞나?

n, m = map(int, input().split())

if n >= 3:
    if m >= 7:
        print(m - 2)
    elif m >= 4:
        print(4)
    else:
        print(m)
elif n == 2:
    if m >= 7:
        print(4)
    else:
        print((m - 1) // 2 + 1)
else:
    print(1)
